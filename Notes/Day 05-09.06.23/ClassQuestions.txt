Write a program to print the area of a rectangle by creating a class named 'Area' having two methods. First method named as 'setDim' takes length and breadth of rectangle as parameters and the second method named as 'getArea' returns the area of the rectangle. Length and breadth of rectangle are entered through keyboard.



Create a class named 'Student' with String variable 'name' and integer variable 'roll_no'. Assign the value of roll_no as '2' and that of name as "John" by creating an object of the class Student.
Assign and print the roll number, phone number and address of two students having names "Sam" and "John" respectively by creating two objects of class 'Student'.


Write a program to print the area and perimeter of a triangle having sides of 3, 4 and 5 units by creating a class named 'Triangle' without any parameter in its constructor.


Write a program to print the area and perimeter of a triangle having sides of 3, 4 and 5 units by creating a class named 'Triangle' with constructor having the three sides as its parameters.

Write a program to print the area of two rectangles having sides (4,5) and (5,8) respectively by creating a class named 'Rectangle' with a method named 'Area' which returns the area and length and breadth passed as parameters to its constructor.

Write a program to print the area of a rectangle by creating a class named 'Area' taking the values of its length and breadth as parameters of its constructor and having a method named 'returnArea' which returns the area of the rectangle. Length and breadth of rectangle are entered through keyboard.


Print the average of three numbers entered by user by creating a class named 'Average' having a method to calculate and print the average.


Print the sum, difference and product of two complex numbers by creating a class named 'Complex' with separate methods for each operation whose real and imaginary parts are entered by user.


Write a program that would print the information (name, year of joining, salary, address) of three employees by creating a class named 'Employee'. The output should be as follows:
Name        Year of joining        Address
Robert            1994                64C- WallsStreat
Sam                2000                68D- WallsStreat
John                1999                26B- WallsStreat


Write a program by creating an 'Employee' class having the following methods and print the final salary.
1 - 'getInfo()' which takes the salary, number of hours of work per day of employee as parameter
2 - 'AddSal()' which adds $10 to salary of the employee if it is less than $500.
3 - 'AddWork()' which adds $5 to salary of employee if the number of hours of work per day is more than 6 hours.



Create a class called 'Matrix' containing constructor that initializes the number of rows and number of columns of a new Matrix object. The Matrix class has the following information:
1 - number of rows of matrix
2 - number of columns of matrix
3 - elements of matrix in the form of 2D array


The Matrix class has methods for each of the following:
1 - get the number of rows
2 - get the number of columns
3 - set the elements of the matrix at given position (i,j)
4 - adding two matrices. If the matrices are not addable, "Matrices cannot be added" will be displayed.
5 - multiplying the two matrices





Program to calculate area of rectangle using single inheritance in Java.





Program to calculate salary of an employee using single inheritance in Java
Program to print Library record of Student using single inheritance in Java


 Program to implement multilevel Inheritance in Java
 Program to show real world example of multilevel inheritance in Java
 Program to print order of constructor calling using multilevel Inheritance in Java

 class Book 
{ 
    public String title; 
    public String author; 
    Book (String title, String author) 
    { 
        this.title = title; 
        this.author = author; 
    } 
} 
class Library 
{ 
    private final List <Book> books; 
     
    Library (List <Book> books) 
    { 
        this.books = books; 
    } 
    public List<Book> getTotalBooksInLibrary( )
{   
    return books; 
    } 
} 
class Composition 
{ 
    public static void main (String[ ] args) 
    {  
        Book b2 = new Book ("Thinking Java", "Brua E"); 
        Book b3 = new Book ("Java: Complete Reference", "Herb S"); 
         
        List <Book> books = new ArrayList <Book>( );  
        books.add (b2); 
        books.add (b3); 
         
        Library library = new Library (books); 
         
        List<Book> bks = library.getTotalBooksInLibrary ( ); 
        for (Book bk : bks)
{   
      System.out.println ("Title : " + bk.title + " and "+" Author : " + bk.author); 
        } 
    } 
}